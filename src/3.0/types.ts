// types generated by quicktype during postinstall phase
import { OpenAttestationDocument as OpenAttestationDocumentV3 } from "../__generated__/schema.3.0";
import { SchemaId, SignatureAlgorithm } from "../shared/@types/document";

export interface Salt {
  value: string;
  path: string;
}

// TODO rename to something else that is not proof?
export interface VerifiableCredentialProof {
  type: SignatureAlgorithm;
  targetHash: string;
  merkleRoot: string;
  proofs: string[];
  salts: string;
  privacy: { obfuscated: string[] };
}

// TODO rename to wrapped
export type OpenAttestationVerifiableCredential<T extends OpenAttestationDocumentV3 = OpenAttestationDocumentV3> = T & {
  version: SchemaId.v3;
  schema?: string;
  proof: VerifiableCredentialProof;
};
